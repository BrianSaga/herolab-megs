<?xml version="1.0" encoding="ISO-8859-1"?>

<!-- This file contains the definition of the "skill" tab panel. This tab is where
      the user selects the special skill for the character.

      All public visual elements used with this tab panel start with the prefix "ab"
      to associate them with the tab.
-->

<document signature="Hero Lab Data">


  <!-- abSkill portal
        Presents a dynamic table where the user can add special skill for the
        character.

        We use the "SimpleItem" template for selecting the special skill, since
        all we need is basic information. We use a custom template for showing the
        selected skill to highlight auto-added picks based on race selections.
        In conjunction with this, the "fixedlast" attribute forces all non-deletable
        picks (i.e. those that are auto-added) to be shown at the bottom of the list.

        We use an "additem" script to highlight whether more skill need to be
        selected. This requires that we specify the "addthing" referenced in the
        script, which is the resource for tracking skill.

        We use a "candidate" tag expression to limit the choices the user can make.
        If omitted, all things derived from the "Power" component will be shown
        to the user for selection. Using this tagexpr allows us to omit all skill
        that have the "Hide.Power" tag. For example, the Flight ability needs to
        behave as a normal ability, but we only want it available to characters that
        select the "Avian" race. By assigning it the "Hide.Power" tag and using
        the candidate tagexpr to omit those skill, Flight cannot be chosen by
        non-Avian characters but it will also appear in the selected list if the
        character choosed the Avian race.

        We use a "titlebar" script to replace the default title on the choose form
        with something more useful. Just like we did on the title portal above, we
        include the summary information as helpful feedback to the user.

        We use a "description" script to generate the appropriate information for
        display to the user as a description when choosing special skill. We
        call a general procedure for the game system for this purpose.

        We use a "headertitle" script to place a suitable title above the table.
        The title includes an indication of how many selections have been chosen
        and how many remain, with appropriate color highlighting to prompt the user.
  -->
  <portal
    id="abSkill"
    style="tblNormal">
    <table_dynamic
      component="Skill"
      showtemplate="baSklPick"
      choosetemplate="SimpleItem"
      showfixedlast="yes"
      addpick="resHP">
      <candidate>!Hide.Skill</candidate>
      <titlebar><![CDATA[
        @text = "Add a Skill - " & hero.child[resHP].field[resShort].text
        ]]></titlebar>
      <description/>
      <headertitle><![CDATA[
        @text = "Skills: " & hero.child[resHP].field[resShort].text
        ]]></headertitle>
      <additem><![CDATA[
        ~if we're in advancement mode, we've been frozen, so display accordingly
        if (state.iscreate = 0) then
          @text = "{text clrgrey}Add Skills Via Advances Tab"
          done
          endif

        ~set the color based on whether the proper number of slots are allocated
        if (field[resLeft].value = 0) then
          @text = "{text clrgrey}"
        elseif (field[resLeft].value < 0) then
          @text = "{text clrwarning}"
          endif
        @text &= "Add New Skill"
        ]]></additem>
      </table_dynamic>
    </portal>


  <!-- baSklPick template
        Displays one skill within the table of skills. This template is very
        similar to the one used for attributes. The key differences are that this
        template is tied to skills and has slightly different margins for closer
        grouping of the items in the table.
  -->
  <template
    id="baSklPick"
    name="Skill Pick"
    compset="Skill"
    marginhorz="5"
    marginvert="3">

    <portal
      id="name"
      style="lblLeft"
      showinvalid="yes">
      <label
        field="name">
        </label>
      </portal>

    <portal
      id="value"
      style="incrSimple">
      <incrementer
        field="trtUser">
        </incrementer>
      <mouseinfo><![CDATA[
        if (hero.tagis[mode.creation] = 0) then
          @text = "Skills must be modified via the Advances tab once the character is locked for play."
        elseif (autonomous = 0) then
          @text = "This trait has been improved via the Advances tab and cannot be modified further from here."
        else
          @text = "Allocate points to this skill by clicking on the arrows to increase/decrease the number of points assigned."
          endif
        ]]></mouseinfo>
      </portal>
	  
    <portal
      id="total"
      style="lblXLarge"
      showinvalid="yes">
      <label
        field="trtFinal">
        </label>
      </portal>	  

	<portal
	  id="edit"
	  style="actEdit"
	  tiptext="Edit Subskills">
	  <action
		action="edit"
		buttontext="">
		</action>
	  </portal>	 

    <portal
      id="sub"
      style="lblSecond"
      showinvalid="yes">
      <label
		ismultiline="yes">
		<labeltext><![CDATA[
			var kids as number
			var x as number
			x = 0
			if (isgizmo <> 0) then
				kids = gizmo.tagcount[Subskill.?]
				if (kids > 0) then
					@text &= "Subskills: " 
					foreach pick in gizmo from Subskill
						x += 1
						@text &= eachpick.livename
						if (x < kids) then
							@text &= ", "
						endif
					nexteach
				else
					@text &= "No subskills chosen"
				endif
			endif
		]]></labeltext>
	  </label>
    </portal>
 
    <portal
      id="info"
      style="actInfo">
      <action
        action="info">
        </action>
      </portal>
	  
    <portal
      id="delete"
      style="actDelete"
      tiptext="Click to delete this item">
      <action
        action="delete">
        </action>
      </portal>	  

    <position><![CDATA[
      ~set up our height based on our tallest portal
      height = portal[sub].height + 55

      ~if this is a "sizing" calculation, we're done
      doneif (issizing <> 0)

	  if (field[lnkLinked].value <> 0) then
		portal[value].freeze = 1
	  else
		portal[value].freeze = 0
	  endif
	  
      ~freeze our value in advancement mode or if an advancement has modified us
      ~Note: All freezing must be done *before* any positioning is performed.
      if (state.iscreate = 0) then
        portal[value].freeze = 1
      elseif (autonomous = 0) then
        portal[value].freeze = 1
        endif

      ~position our tallest portal at the top
      portal[info].top = 0
      portal[edit].top = 0

      ~center the other portals vertically
      portal[value].top = 0
      portal[delete].top = 0

	  ~position the delete portal on the far right
	  perform portal[delete].alignedge[right,0]
	  
      ~position the info portal on the far right
      perform portal[info].alignrel[rtol,delete,-2]

	  ~position the edit portal next to the action button
	  perform portal[edit].alignrel[rtol,info,-2]	  

      ~position the name on the left and make sure its width does not exceed the available space
      portal[name].left = 0
      portal[name].width = maximum(portal[name].width,110)

	  ~position the final to the right of the incrementer portal (plus a gap)
      perform portal[value].alignrel[ltor,name,10]

      perform portal[total].alignrel[ltor,value,20]

      ~position the final portal next to the action button
	  perform portal[sub].alignrel[ltor,total,10]
	  
	  ~position the subskill portal beside the edit
	  portal[sub].top = portal[value].bottom + 5
	  portal[sub].left = portal[value].left
	  portal[sub].width = portal[edit].left - portal[sub].left - 5
	  portal[sub].height = height

	  ~position names and bonus around the incrementer  
	  portal[name].top = portal[value].top + (portal[name].height / 3) 
	
	 ]]></position>

    </template>


  <!-- skill layout
        This layout orchestrates the display of the visual elements that comprise
        the Skills tab. This amounts to a title at the top and a dynamic table
        below where the user can add the special skill he wants.

        The logic for this layout is similar to (albeit much simpler than) the
        logic for the Basics tab. So please refer to the Basics tab for more details.
  -->
  <layout
    id="skill">
    <portalref portal="abSkill" taborder="10"/>

    <!-- This script sizes and positions the layout and its child visual elements. -->
    <position><![CDATA[
      ~freeze our table in advancement mode to disable adding new choices
      ~Note: All freezing must be done *before* any positioning is performed.
      if (state.iscreate = 0) then
        portal[abSkill].freeze = 1
        endif

      ~position and size the table to span the full layout; it will only use the
      ~vertical space that it actually needs
      perform portal[abSkill].autoplace
      ]]></position>

    </layout>


  <!-- skill panel
        This is the "Skills" panel shown within Hero Lab. Since we want this
        panel to appear after Basics and within the traits grouping, we assign it
        an "order" of 120.

        The logic for this panel is similar to the logic for the Basics panel, so
        please refer to the Basics panel for more details.
  -->
  <panel
    id="skill"
    name="Skills"
    marginhorz="5"
    marginvert="5"
    order="120">
    <live>!HideTab.skill</live>
    <layoutref layout="skill"/>
    <position><![CDATA[
      ]]></position>
    </panel>
  </document>
